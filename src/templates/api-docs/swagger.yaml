---
swagger: '2.0'
info:
  version: '0.0.0'
  title: 'Stats Service'
  description: 'Provides persistence of stats'
host: 'localhost:3000'
basePath: '/'
schemes:
  - 'http'
consumes:
  - 'application/json'
produces:
  - 'application/json'
paths:
  '/courses/{courseId}':
    post:
      description: 'Persists a session study event'
      parameters:
        - in: header
          description: Identifies the user
          name: X-User-Id
          type: string
          format: uuid
          required: true
        - in: path
          name: courseId
          required: true
          type: string
          format: uuid
          description: Identifies the course
        - in: body
          name: stats diff
          required: true
          schema:
            type: object
            properties:
              sessionId:
                type: string
                format: uuid
              totalModulesStudied:
                type: number
              averageScore:
                type: number
              timeStudied:
                type: number
                description: Type in milliseconds

      responses:
        '201':
          description: OK

    get:
      description: 'Fetches course lifetime statistics'
      parameters:
        - in: header
          description: Identifies the user
          name: X-User-Id
          type: string
          format: uuid
          required: true
        - in: path
          name: courseId
          required: true
          type: string
          format: uuid
          description: Identifies the course

      responses:
        '200':
          description: Course lifetime stats
          schema:
            type: object
            properties:
              totalModulesStudied:
                type: number
                description: The number of modules studied in the course
              averageScore:
                type: number
                description: The users average score of modules across the course
              timeStudied:
                type: number
                description: The total time spent studying a course

  '/courses/{courseId}/sessions/{sessionId}':
    get:
      description: 'Fetches a single study session'
      parameters:
        - in: header
          description: Identifies the user
          name: X-User-Id
          type: string
          format: uuid
          required: true
        - in: path
          name: courseId
          required: true
          type: string
          format: uuid
          description: Identifies the course
        - in: path
          name: sessionId
          required: true
          type: string
          format: uuid
          description: Identifies the study session

      responses:
        '200':
          description: Study session stats
          schema:
            type: object
            properties:
              sessionId:
                description: Identifies the session
                type: string
                format: uuid
              totalModulesStudied:
                type: number
                description: The number of modules studied in the session
              averageScore:
                type: number
                description: The users average score of modules in session
              timeStudied:
                type: number
                description: The total time spent in session

  '/admin/users':
    get:
      summary: get users
      tags:
        - admin
      operationId: /v1/users
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: ''
        - name: page
          in: query
          type: integer
          format: int32
          description: ''
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/usersResponse"
        400:
          description: 'Bad Request'
          headers: {}
    post:
      summary: create new user
      tags:
        - admin
      operationId: /v1/userscreate
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/usersCreateRequest'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/usersResponse"
        400:
          description: 'Bad Request'
          headers: {}

  '/admin/courses':
    get:
      summary: get courses
      tags:
        - admin
      operationId: /v1/courses
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: ''
        - name: page
          in: query
          type: integer
          format: int32
          description: ''
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/coursesResponse"
        400:
          description: 'Bad Request'
          headers: {}
    post:
      summary: create new course
      tags:
        - admin
      operationId: /v1/coursescreate
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/coursesCreateRequest'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/coursesResponse"
        400:
          description: 'Bad Request'
          headers: {}

definitions:
  usersResponse:
    type: "object"
    properties:
      id:
        type: "string"
        example: "602a336c4d06d36f886c1371"
      name:
        type: "string"
        example: "test"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"

  usersCreateRequest:
    type: "object"
    required:
      - "name"
      - "email"
    properties:
      name:
        type: "string"
        example: "test"
      email:
        type: "string"
        example: "test@test.test"

  coursesResponse:
    type: "object"
    properties:
      id:
        type: "string"
        example: "602a336c4d06d36f886c1371"
      name:
        type: "string"
        example: "test"
      description:
        type: "string"
        example: "test"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"

  coursesCreateRequest:
    type: "object"
    required:
      - "name"
      - "description"
    properties:
      name:
        type: "string"
        example: "test"
      description:
        type: "string"
        example: "test"